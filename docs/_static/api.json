{"swagger": "2.0", "info": {"title": "Pulp 3 API", "license": {"name": "GPLv2+"}, "logo": {"url": "https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg"}, "version": "v3"}, "host": "localhost:24817", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/pulp/api/v3/content/container/blobs/": {"get": {"operationId": "content_container_blobs_list", "summary": "List blobs", "description": "ViewSet for Blobs.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "digest", "in": "query", "description": "Filter results where digest matches value", "required": false, "type": "string"}, {"name": "digest__in", "in": "query", "description": "Filter results where digest is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "media_type", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/container.Blob"}}}}}}, "tags": ["content: blobs"]}, "parameters": []}, "{blob_href}": {"get": {"operationId": "content_container_blobs_read", "summary": "Inspect a blob", "description": "ViewSet for Blobs.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/container.Blob"}}}, "tags": ["content: blobs"]}, "parameters": [{"name": "blob_href", "in": "path", "description": "URI of Blob. e.g.: /pulp/api/v3/content/container/blobs/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/container/manifests/": {"get": {"operationId": "content_container_manifests_list", "summary": "List manifests", "description": "ViewSet for Manifest.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "digest", "in": "query", "description": "Filter results where digest matches value", "required": false, "type": "string"}, {"name": "digest__in", "in": "query", "description": "Filter results where digest is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "media_type", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/container.Manifest"}}}}}}, "tags": ["content: manifests"]}, "parameters": []}, "{manifest_href}": {"get": {"operationId": "content_container_manifests_read", "summary": "Inspect a manifest", "description": "ViewSet for Manifest.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/container.Manifest"}}}, "tags": ["content: manifests"]}, "parameters": [{"name": "manifest_href", "in": "path", "description": "URI of Manifest. e.g.: /pulp/api/v3/content/container/manifests/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/container/tags/": {"get": {"operationId": "content_container_tags_list", "summary": "List tags", "description": "ViewSet for Tag.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "name", "in": "query", "description": "Filter results where name matches value", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "media_type", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "digest", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/container.Tag"}}}}}}, "tags": ["content: tags"]}, "parameters": []}, "{tag_href}": {"get": {"operationId": "content_container_tags_read", "summary": "Inspect a tag", "description": "ViewSet for Tag.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/container.Tag"}}}, "tags": ["content: tags"]}, "parameters": [{"name": "tag_href", "in": "path", "description": "URI of Tag. e.g.: /pulp/api/v3/content/container/tags/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/distributions/container/container/": {"get": {"operationId": "distributions_container_container_list", "summary": "List container distributions", "description": "The Container Distribution will serve the latest version of a Repository if\n``repository`` is specified. The Container Distribution will serve a specific\nrepository version if ``repository_version``. Note that **either**\n``repository`` or ``repository_version`` can be set on a Container\nDistribution, but not both.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "base_path", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "base_path__contains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__icontains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__in", "in": "query", "description": "Filter results where base_path is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/container.ContainerDistribution"}}}}}}, "tags": ["distributions: container"]}, "post": {"operationId": "distributions_container_container_create", "summary": "Create a container distribution", "description": "Trigger an asynchronous create task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/container.ContainerDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: container"]}, "parameters": []}, "{container_distribution_href}": {"get": {"operationId": "distributions_container_container_read", "summary": "Inspect a container distribution", "description": "The Container Distribution will serve the latest version of a Repository if\n``repository`` is specified. The Container Distribution will serve a specific\nrepository version if ``repository_version``. Note that **either**\n``repository`` or ``repository_version`` can be set on a Container\nDistribution, but not both.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/container.ContainerDistribution"}}}, "tags": ["distributions: container"]}, "put": {"operationId": "distributions_container_container_update", "summary": "Update a container distribution", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/container.ContainerDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: container"]}, "patch": {"operationId": "distributions_container_container_partial_update", "summary": "Partially update a container distribution", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/container.ContainerDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: container"]}, "delete": {"operationId": "distributions_container_container_delete", "summary": "Delete a container distribution", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: container"]}, "parameters": [{"name": "container_distribution_href", "in": "path", "description": "URI of Container Distribution. e.g.: /pulp/api/v3/distributions/container/container/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/remotes/container/container/": {"get": {"operationId": "remotes_container_container_list", "summary": "List container remotes", "description": "Container remotes represent an external repository that implements the Container\nRegistry API. Container remotes support deferred downloading by configuring\nthe ``policy`` field.  ``on_demand`` and ``streamed`` policies can provide\nsignificant disk space savings.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "pulp_last_updated__lt", "in": "query", "description": "Filter results where pulp_last_updated is less than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__lte", "in": "query", "description": "Filter results where pulp_last_updated is less than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gt", "in": "query", "description": "Filter results where pulp_last_updated is greater than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gte", "in": "query", "description": "Filter results where pulp_last_updated is greater than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__range", "in": "query", "description": "Filter results where pulp_last_updated is between two comma separated values", "required": false, "type": "string"}, {"name": "pulp_last_updated", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/container.ContainerRemote"}}}}}}, "tags": ["remotes: container"]}, "post": {"operationId": "remotes_container_container_create", "summary": "Create a container remote", "description": "Container remotes represent an external repository that implements the Container\nRegistry API. Container remotes support deferred downloading by configuring\nthe ``policy`` field.  ``on_demand`` and ``streamed`` policies can provide\nsignificant disk space savings.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/container.ContainerRemote"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/container.ContainerRemote"}}}, "tags": ["remotes: container"]}, "parameters": []}, "{container_remote_href}": {"get": {"operationId": "remotes_container_container_read", "summary": "Inspect a container remote", "description": "Container remotes represent an external repository that implements the Container\nRegistry API. Container remotes support deferred downloading by configuring\nthe ``policy`` field.  ``on_demand`` and ``streamed`` policies can provide\nsignificant disk space savings.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/container.ContainerRemote"}}}, "tags": ["remotes: container"]}, "put": {"operationId": "remotes_container_container_update", "summary": "Update a container remote", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/container.ContainerRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: container"]}, "patch": {"operationId": "remotes_container_container_partial_update", "summary": "Partially update a container remote", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/container.ContainerRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: container"]}, "delete": {"operationId": "remotes_container_container_delete", "summary": "Delete a container remote", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: container"]}, "parameters": [{"name": "container_remote_href", "in": "path", "description": "URI of Container Remote. e.g.: /pulp/api/v3/remotes/container/container/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/repositories/container/container/": {"get": {"operationId": "repositories_container_container_list", "summary": "List container repositorys", "description": "ViewSet for container repo.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/container.ContainerRepository"}}}}}}, "tags": ["repositories: container"]}, "post": {"operationId": "repositories_container_container_create", "summary": "Create a container repository", "description": "ViewSet for container repo.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/container.ContainerRepository"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/container.ContainerRepository"}}}, "tags": ["repositories: container"]}, "parameters": []}, "{container_repository_href}": {"get": {"operationId": "repositories_container_container_read", "summary": "Inspect a container repository", "description": "ViewSet for container repo.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/container.ContainerRepository"}}}, "tags": ["repositories: container"]}, "put": {"operationId": "repositories_container_container_update", "summary": "Update a container repository", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/container.ContainerRepository"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: container"]}, "patch": {"operationId": "repositories_container_container_partial_update", "summary": "Partially update a container repository", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/container.ContainerRepository"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: container"]}, "delete": {"operationId": "repositories_container_container_delete", "summary": "Delete a container repository", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: container"]}, "parameters": [{"name": "container_repository_href", "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/", "required": true, "type": "string"}]}, "{container_repository_href}add/": {"post": {"operationId": "repositories_container_container_add", "summary": "Add content", "description": "Trigger an asynchronous task to recursively add container content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RecursiveManage"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: container"]}, "parameters": [{"name": "container_repository_href", "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/", "required": true, "type": "string"}]}, "{container_repository_href}build_image/": {"post": {"operationId": "repositories_container_container_build_image", "summary": "Build an Image", "description": "Trigger an asynchronous task to build an OCI image from a Containerfile. A new repository version is created with the new image and tag. This API is tech preview in Pulp Container 1.1. Backwards compatibility when upgrading is not guaranteed.", "parameters": [{"name": "containerfile_artifact", "in": "formData", "description": "Artifact representing the Containerfile that should be used to run buildah.", "required": false, "type": "string", "format": "uri"}, {"name": "containerfile", "in": "formData", "description": "An uploaded Containerfile that should be used to run buildah.", "required": false, "type": "file"}, {"name": "tag", "in": "formData", "description": "A tag name for the new image being built.", "required": false, "type": "string", "default": "latest", "minLength": 1}, {"name": "artifacts", "in": "formData", "description": "A JSON string where each key is an artifact href and the value is it's relative path (name) inside the /pulp_working_directory of the build container executing the Containerfile.", "required": false, "type": "string"}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["repositories: container"]}, "parameters": [{"name": "container_repository_href", "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/", "required": true, "type": "string"}]}, "{container_repository_href}copy_manifests/": {"post": {"operationId": "repositories_container_container_copy_manifests", "summary": "Copy manifests", "description": "Trigger an asynchronous task to copy manifests", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ManifestCopy"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: container"]}, "parameters": [{"name": "container_repository_href", "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/", "required": true, "type": "string"}]}, "{container_repository_href}copy_tags/": {"post": {"operationId": "repositories_container_container_copy_tags", "summary": "Copy tags", "description": "Trigger an asynchronous task to copy tags", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TagCopy"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: container"]}, "parameters": [{"name": "container_repository_href", "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/", "required": true, "type": "string"}]}, "{container_repository_href}remove/": {"post": {"operationId": "repositories_container_container_remove", "summary": "Remove content", "description": "Trigger an async task to recursively remove container content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RecursiveManage"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: container"]}, "parameters": [{"name": "container_repository_href", "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/", "required": true, "type": "string"}]}, "{container_repository_href}sync/": {"post": {"operationId": "repositories_container_container_sync", "summary": "Sync from a remote", "description": "Trigger an asynchronous task to sync content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: container"]}, "parameters": [{"name": "container_repository_href", "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/", "required": true, "type": "string"}]}, "{container_repository_href}tag/": {"post": {"operationId": "repositories_container_container_tag", "summary": "Create a Tag", "description": "Trigger an asynchronous task to tag an image in the repository", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TagImage"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: container"]}, "parameters": [{"name": "container_repository_href", "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/", "required": true, "type": "string"}]}, "{container_repository_href}untag/": {"post": {"operationId": "repositories_container_container_untag", "summary": "Delete a tag", "description": "Trigger an asynchronous task to untag an image in the repository", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UnTagImage"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: container"]}, "parameters": [{"name": "container_repository_href", "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/", "required": true, "type": "string"}]}, "{container_repository_href}versions/": {"get": {"operationId": "repositories_container_container_versions_list", "summary": "List repository versions", "description": "ContainerRepositoryVersion represents a single container repository version.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "number", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "number__lt", "in": "query", "description": "Filter results where number is less than value", "required": false, "type": "number"}, {"name": "number__lte", "in": "query", "description": "Filter results where number is less than or equal to value", "required": false, "type": "number"}, {"name": "number__gt", "in": "query", "description": "Filter results where number is greater than value", "required": false, "type": "number"}, {"name": "number__gte", "in": "query", "description": "Filter results where number is greater than or equal to value", "required": false, "type": "number"}, {"name": "number__range", "in": "query", "description": "Filter results where number is between two comma separated values", "required": false, "type": "number"}, {"name": "pulp_created__lt", "in": "query", "description": "Filter results where pulp_created is less than value", "required": false, "type": "string"}, {"name": "pulp_created__lte", "in": "query", "description": "Filter results where pulp_created is less than or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__gt", "in": "query", "description": "Filter results where pulp_created is greater than value", "required": false, "type": "string"}, {"name": "pulp_created__gte", "in": "query", "description": "Filter results where pulp_created is greater than or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__range", "in": "query", "description": "Filter results where pulp_created is between two comma separated values", "required": false, "type": "string"}, {"name": "content", "in": "query", "description": "Content Unit referenced by HREF", "required": false, "type": "string"}, {"name": "pulp_created", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/RepositoryVersion"}}}}}}, "tags": ["repositories: container versions"]}, "parameters": [{"name": "container_repository_href", "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/", "required": true, "type": "string"}]}, "{container_repository_version_href}": {"get": {"operationId": "repositories_container_container_versions_read", "summary": "Inspect a repository version", "description": "ContainerRepositoryVersion represents a single container repository version.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RepositoryVersion"}}}, "tags": ["repositories: container versions"]}, "delete": {"operationId": "repositories_container_container_versions_delete", "summary": "Delete a repository version", "description": "Trigger an asynchronous task to delete a repositroy version.", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: container versions"]}, "parameters": [{"name": "container_repository_version_href", "in": "path", "description": "URI of Repository Version. e.g.: /pulp/api/v3/repositories/container/container/1/versions/1/", "required": true, "type": "string"}]}, "{container_repository_version_href}repair/": {"post": {"operationId": "repositories_container_container_versions_repair", "description": "Trigger an asynchronous task to repair a repositroy version.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositoryVersion"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: container versions"]}, "parameters": [{"name": "container_repository_version_href", "in": "path", "description": "URI of Repository Version. e.g.: /pulp/api/v3/repositories/container/container/1/versions/1/", "required": true, "type": "string"}]}}, "definitions": {"container.Blob": {"required": ["artifact", "digest", "media_type"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "digest": {"title": "Digest", "description": "sha256 of the Blob file", "type": "string", "minLength": 1}, "media_type": {"title": "Media type", "description": "Blob media type of the file", "type": "string", "minLength": 1}}}, "container.Manifest": {"required": ["artifact", "digest", "schema_version", "media_type", "listed_manifests", "blobs"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "digest": {"title": "Digest", "description": "sha256 of the Manifest file", "type": "string", "minLength": 1}, "schema_version": {"title": "Schema version", "description": "Manifest schema version", "type": "integer"}, "media_type": {"title": "Media type", "description": "Manifest media type of the file", "type": "string", "minLength": 1}, "listed_manifests": {"description": "Manifests that are referenced by this Manifest List", "type": "array", "items": {"description": "Manifests that are referenced by this Manifest List", "type": "string", "format": "uri"}, "uniqueItems": true}, "config_blob": {"title": "Config blob", "description": "Blob that contains configuration for this Manifest", "type": "string", "format": "uri"}, "blobs": {"description": "Blobs that are referenced by this Manifest", "type": "array", "items": {"description": "Blobs that are referenced by this Manifest", "type": "string", "format": "uri"}, "uniqueItems": true}}}, "container.Tag": {"required": ["artifact", "name", "tagged_manifest"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "name": {"title": "Name", "description": "Tag name", "type": "string", "minLength": 1}, "tagged_manifest": {"title": "Tagged manifest", "description": "Manifest that is tagged", "type": "string", "format": "uri"}}}, "container.ContainerDistribution": {"required": ["base_path", "name"], "type": "object", "properties": {"base_path": {"title": "Base path", "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")", "type": "string", "minLength": 1}, "name": {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.", "type": "string", "minLength": 1}, "repository": {"title": "Repository", "description": "The latest RepositoryVersion for this Repository will be served.", "type": "string", "format": "uri", "x-nullable": true}, "content_guard": {"title": "Content guard", "description": "An optional content-guard.", "type": "string", "format": "uri", "x-nullable": true}, "pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "repository_version": {"title": "Repository version", "description": "RepositoryVersion to be served", "type": "string", "format": "uri", "x-nullable": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "registry_path": {"title": "Registry path", "description": "The Registry hostame/name/ to use with docker pull command defined by this distribution.", "type": "string", "readOnly": true, "minLength": 1}}}, "AsyncOperationResponse": {"required": ["task"], "type": "object", "properties": {"task": {"title": "Task", "description": "The href of the task.", "type": "string", "format": "uri"}}}, "container.ContainerRemote": {"required": ["name", "url", "upstream_name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "name": {"title": "Name", "description": "A unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external content source.", "type": "string", "minLength": 1}, "ca_cert": {"title": "Ca cert", "description": "A string containing the PEM encoded CA certificate used to validate the server certificate presented by the remote server. All new line characters must be escaped.", "type": "string", "minLength": 1, "x-nullable": true}, "client_cert": {"title": "Client cert", "description": "A string containing the PEM encoded client certificate used for authentication. All new line characters must be escaped.", "type": "string", "minLength": 1, "x-nullable": true}, "client_key": {"title": "Client key", "description": "A PEM encoded private key used for authentication.", "type": "string", "minLength": 1, "x-nullable": true}, "tls_validation": {"title": "Tls validation", "description": "If True, TLS peer validation must be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port", "type": "string", "minLength": 1, "x-nullable": true}, "username": {"title": "Username", "description": "The username to be used for authentication when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "password": {"title": "Password", "description": "The password to be used for authentication when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "pulp_last_updated": {"title": "Pulp last updated", "description": "Timestamp of the most recent update of the remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency": {"title": "Download concurrency", "description": "Total number of simultaneous connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy", "description": "\nimmediate - All manifests and blobs are downloaded and saved during a sync.\non_demand - Only tags and manifests are downloaded. Blobs are not\n            downloaded until they are requested for the first time by a client.\nstreamed - Blobs are streamed to the client with every request and never saved.\n", "type": "string", "enum": ["immediate", "on_demand", "streamed"], "default": "immediate"}, "upstream_name": {"title": "Upstream name", "description": "Name of the upstream repository", "type": "string", "minLength": 1}, "allowlist_tags": {"description": "A list of allowlisted tags to sync", "type": "array", "items": {"type": "string", "maxLength": 255, "minLength": 1}, "x-nullable": true}}}, "container.ContainerRepository": {"required": ["name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "versions_href": {"title": "Versions href", "type": "string", "format": "uri", "readOnly": true}, "latest_version_href": {"title": "Latest version href", "type": "string", "format": "uri", "readOnly": true}, "name": {"title": "Name", "description": "A unique name for this repository.", "type": "string", "minLength": 1}, "description": {"title": "Description", "description": "An optional description.", "type": "string", "minLength": 1, "x-nullable": true}}}, "RecursiveManage": {"type": "object", "properties": {"content_units": {"description": "A list of content units to operate on.", "type": "array", "items": {"type": "string"}}}}, "ManifestCopy": {"type": "object", "properties": {"source_repository": {"title": "Repository", "description": "A URI of the repository to copy content from.", "type": "string", "format": "uri"}, "source_repository_version": {"title": "Source repository version", "description": "A URI of the repository version to copy content from.", "type": "string", "format": "uri"}, "digests": {"description": "A list of manifest digests to copy.", "type": "array", "items": {"type": "string"}}, "media_types": {"description": "A list of media_types to copy.", "type": "array", "items": {"type": "string", "enum": ["application/vnd.docker.distribution.manifest.v1+json", "application/vnd.docker.distribution.manifest.v2+json", "application/vnd.docker.distribution.manifest.list.v2+json", "application/vnd.oci.image.manifest.v1+json", "application/vnd.oci.image.index.v1+json"]}}}}, "TagCopy": {"type": "object", "properties": {"source_repository": {"title": "Repository", "description": "A URI of the repository to copy content from.", "type": "string", "format": "uri"}, "source_repository_version": {"title": "Source repository version", "description": "A URI of the repository version to copy content from.", "type": "string", "format": "uri"}, "names": {"description": "A list of tag names to copy.", "type": "array", "items": {"type": "string"}}}}, "RepositorySyncURL": {"required": ["remote"], "type": "object", "properties": {"remote": {"title": "Remote", "description": "A URI of the repository to be synchronized.", "type": "string", "format": "uri"}, "mirror": {"title": "Mirror", "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only.", "type": "boolean", "default": false}}}, "TagImage": {"required": ["tag", "digest"], "type": "object", "properties": {"tag": {"title": "Tag", "description": "A tag name", "type": "string", "minLength": 1}, "digest": {"title": "Digest", "description": "sha256 of the Manifest file", "type": "string", "minLength": 1}}}, "UnTagImage": {"required": ["tag"], "type": "object", "properties": {"tag": {"title": "Tag", "description": "A tag name", "type": "string", "minLength": 1}}}, "ContentSummary": {"title": "Content summary", "description": "Various count summaries of the content in the version and the HREF to view them.", "required": ["added", "removed", "present"], "type": "object", "properties": {"added": {"title": "Added", "type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"type": "string"}}}, "removed": {"title": "Removed", "type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"type": "string"}}}, "present": {"title": "Present", "type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"type": "string"}}}}}, "RepositoryVersion": {"type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "number": {"title": "Number", "type": "integer", "readOnly": true}, "base_version": {"title": "Base version", "description": "A repository version whose content was used as the initial set of content for this repository version", "type": "string", "format": "uri"}, "content_summary": {"$ref": "#/definitions/ContentSummary"}}}}, "tags": [{"name": "content: blobs", "x-displayName": "Content: Blobs"}, {"name": "content: manifests", "x-displayName": "Content: Manifests"}, {"name": "content: tags", "x-displayName": "Content: Tags"}, {"name": "distributions: container", "x-displayName": "Distributions: Container"}, {"name": "remotes: container", "x-displayName": "Remotes: Container"}, {"name": "repositories: container", "x-displayName": "Repositories: Container"}, {"name": "repositories: container versions", "x-displayName": "Repositories: Container Versions"}]}
